#!/bin/bash

# Script de Verifica√ß√£o de Configura√ß√£o do Spotify - Musike
echo "üîç Verificando configura√ß√£o do Spotify para Musike..."
echo "=================================================="

# Verificar se arquivos .env existem
echo "üìÅ Verificando arquivos de configura√ß√£o..."

if [ ! -f "backend/.env" ]; then
    echo "‚ùå Arquivo backend/.env n√£o encontrado!"
    echo "   Crie o arquivo com base no backend/.env.example"
    echo ""
else
    echo "‚úÖ Arquivo backend/.env encontrado"
fi

if [ ! -f "frontend/.env.local" ]; then
    echo "‚ùå Arquivo frontend/.env.local n√£o encontrado!"
    echo "   Crie o arquivo com: NEXT_PUBLIC_API_URL=http://localhost:8080"
    echo ""
else
    echo "‚úÖ Arquivo frontend/.env.local encontrado"
fi

# Verificar vari√°veis cr√≠ticas do backend
echo ""
echo "üîß Verificando vari√°veis de ambiente do backend..."

if [ -f "backend/.env" ]; then
    source backend/.env

    if [ -z "$SPOTIFY_CLIENT_ID" ]; then
        echo "‚ùå SPOTIFY_CLIENT_ID n√£o est√° definido"
    else
        echo "‚úÖ SPOTIFY_CLIENT_ID: ${SPOTIFY_CLIENT_ID:0:8}..."
    fi

    if [ -z "$SPOTIFY_CLIENT_SECRET" ]; then
        echo "‚ùå SPOTIFY_CLIENT_SECRET n√£o est√° definido"
    else
        echo "‚úÖ SPOTIFY_CLIENT_SECRET: ${SPOTIFY_CLIENT_SECRET:0:8}..."
    fi

    if [ -z "$SPOTIFY_REDIRECT_URL" ]; then
        echo "‚ùå SPOTIFY_REDIRECT_URL n√£o est√° definido"
    else
        echo "‚úÖ SPOTIFY_REDIRECT_URL: $SPOTIFY_REDIRECT_URL"

        # Verificar se √© uma URL v√°lida para desenvolvimento
        if [[ "$SPOTIFY_REDIRECT_URL" == "http://localhost:3000/callback" || "$SPOTIFY_REDIRECT_URL" == "http://127.0.0.1:3000/callback" ]]; then
            echo "   ‚úÖ URL v√°lida para desenvolvimento local"
        else
            echo "   ‚ö†Ô∏è  URL pode n√£o ser v√°lida para desenvolvimento local"
            echo "       Use: http://localhost:3000/callback"
        fi
    fi
fi

echo ""
echo "üåê Verificando conectividade..."

# Verificar se as portas est√£o livres
if lsof -Pi :3000 -sTCP:LISTEN -t >/dev/null ; then
    echo "‚ùå Porta 3000 j√° est√° em uso"
else
    echo "‚úÖ Porta 3000 dispon√≠vel"
fi

if lsof -Pi :8080 -sTCP:LISTEN -t >/dev/null ; then
    echo "‚ùå Porta 8080 j√° est√° em uso"
else
    echo "‚úÖ Porta 8080 dispon√≠vel"
fi

echo ""
echo "üìã Checklist para resolver 'redirect URI is not secure':"
echo "=================================================="
echo "1. ‚úÖ Acesse https://developer.spotify.com/dashboard"
echo "2. ‚úÖ Crie uma nova aplica√ß√£o ou edite existente"
echo "3. ‚úÖ Em 'Settings', adicione EXATAMENTE estas URLs em 'Redirect URIs':"
echo "   - http://localhost:3000/callback"
echo "   - http://127.0.0.1:3000/callback"
echo "4. ‚úÖ Copie Client ID e Client Secret para backend/.env"
echo "5. ‚úÖ Salve as configura√ß√µes no Spotify Dashboard"
echo "6. ‚úÖ Execute o backend: cd backend && go run main.go"
echo "7. ‚úÖ Execute o frontend: cd frontend && npm run dev"
echo "8. ‚úÖ Acesse http://localhost:3000"
echo ""
echo "üö® IMPORTANTE: Use HTTP (n√£o HTTPS) para desenvolvimento local!"
echo "üö® IMPORTANTE: As URLs devem ser EXATAMENTE iguais no Spotify Dashboard!"

echo ""
echo "üîó URLs √∫teis:"
echo "- Spotify Dashboard: https://developer.spotify.com/dashboard"
echo "- Documenta√ß√£o OAuth: https://developer.spotify.com/documentation/general/guides/authorization/"
echo "- Frontend local: http://localhost:3000"
echo "- Backend API: http://localhost:8080/api/v1"
